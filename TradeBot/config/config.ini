# config.ini
[api_keys]
ccxt_exchange_id = binance
ccxt_api_key = 
ccxt_secret = 
[binance]
api_key = YOUR_API_KEY
api_secret = YOUR_API_SECRET
sandbox = true
# ccxt_api_password = VOTRE_MOT_DE_PASSE_API
alpaca_api_key = 
alpaca_secret = 
[alpaca]
api_key = YOUR_ALPACA_KEY
api_secret = YOUR_ALPACA_SECRET
alpaca_paper = True
fred_api_key = 

[database]
db_type = sqlite
db_path = data/trading_data.db
# Pour PostgreSQL ou MySQL, décommenter et configurer:
# db_type = postgresql
# db_host = localhost
# db_port = 5432
# db_name = trading_data
# db_user = user
# db_password = password

[collector]
enabled_sources = yahoo_finance, fred, alpha_vantage
schedule_interval_hours = 24
# Exécuter toutes les 24h

[collector.yahoo_finance]
symbols = ^GSPC, ^DJI, BTC-USD, ETH-USD, AAPL, MSFT, GOOG

[collector.fred]
series_ids = GDP, UNRATE, CPIAUCSL, T10Y2Y, T10YIE

[collector.alpha_vantage]
api_key = 
stocks = AAPL, MSFT, GOOG, AMZN, TSLA
crypto = BTC, ETH, SOL, ADA
forex = EUR, GBP, JPY, CAD
forex_quote_currency = USD
economic_indicators = GDP, RETAIL_SALES, CPI
commodities = WTI, BRENT, NATURAL_GAS

[collector.alpha_vantage.api]
api_key = 
rate_limit_calls_per_minute = 5

[trading]
assets = BTC/USD@ccxt,ETH/USD@ccxt,SOL/USD@ccxt
timeframe = 1h
update_interval_seconds = 3600
position_size_percent = 0.02
max_concurrent_positions = 3
# Limiter le nombre de trades ouverts en même temps

[logging]
log_file = hybrid_trading_bot.log
log_level = INFO

[pi_ratings]
ratings_state_file = pi_ratings_state.json
decay_factor = 0.999
# Facteur de dégradation progressive (1.0 = pas de dégradation)
max_history_points = 100
# Nombre de points d'historique à conserver
max_rating_value = 10.0
# Valeur maximale des ratings avant normalisation
# Pas de seuils ici, ils sont dans la stratégie hybride

[features]
use_sentiment = True
sentiment_news_days = 1
# Jours de news pour sentiment quotidien agrégé

[indicators]
# Paramètres pour les indicateurs TA classiques (utilisés par XGBoost et potentiellement FQ sequence)
rsi_period = 14
macd_fast = 12
macd_slow = 26
macd_signal = 9
bollinger_period = 20
bollinger_dev = 2
volume_ma_period = 20

[market_structure]
ms_volatility_atr_period = 14
# Lookback period for ATR calculation within market structure analysis
vp_timeframe_days = 1
# Combien de jours d'historique pour construire le Volume Profile
vp_resolution = 10
# Résolution en prix pour les bins du VP (ex: bins de $10)
# Seuils pour identifier HVN/LVN en relation au POC ou à la distribution de volume
hvn_volume_threshold_percent = 5
# Le nœud doit contenir >= 5% du volume total pour être considéré HVN
lvn_volume_threshold_percent = 0.5
# Le nœud doit contenir <= 0.5% pour être considéré LVN
# Période de lookback pour la validation des niveaux MS
ms_level_lookback_bars = 50
# Un niveau POC/VA/HVN/LVN est considéré pertinent pendant 50 barres après sa formation

[training]
# Paramètres généraux d'entraînement
historical_data_years = 3
# Années d'historique pour l'entraînement initial
validation_split = 0.2
# Fraction des données pour validation
retrain_interval_seconds = 604800
# Réentraîner toutes les semaines (7 jours)
# Fichiers pour sauvegarder les scalers et autres configs d'entraînement
scalers_file = scalers.pkl
# Utiliser Pickle ou Joblib pour sauvegarder les scalers
training_params_file = training_params.json
# Sauvegarder les paramètres comme les noms de features
label_alpha_percent = 0.1
# Seuil alpha pour labels discrets (0.1%)
label_beta_percent = 0.5
# Seuil beta pour labels discrets (0.5%)
label_window_periods = 10
# Fenêtre de prédiction pour les labels (10 périodes futures)

[xgboost]
# Paramètres pour XGBoost (classification Buy/Sell/Hold)
objective = multi:softprob
# Changed from softmax to softprob to get probabilities
num_class = 3
# 0: Hold, 1: Buy, 2: Sell
eval_metric = mlogloss
max_depth = 5
learning_rate = 0.1
n_estimators = 150
# Augmenter si nécessaire
subsample = 0.8
colsample_bytree = 0.8
# Fichiers du modèle
model_file = xgb_model.json

[futurequant]
# Paramètres pour le modèle FutureQuant Transformer (prédiction de quantiles)
window_size_in = 30
# Longueur de la séquence d'entrée
window_size_out = 5
# Prédire N périodes dans le futur
# Quantiles à prédire (doit être une liste, ex: 0.1, 0.5, 0.9 pour Q10, Q50, Q90)
quantiles = 0.1, 0.5, 0.9
# Séparés par virgule
# Architecture Transformer
num_transformer_blocks = 4
attention_heads = 4
# Nombre de têtes dans MultiHeadAttention
ff_dim = 32
# Dimension de la couche Dense interne après attention
conv_filters = 32
# Nombre de filtres Conv1D
conv_kernel_size = 3
# Taille du kernel Conv1D
dropout_rate = 0.1
# Dropout après attention et conv
# Paramètres d'entraînement
epochs = 100
# Nombre d'époques pour l'entraînement
batch_size = 64
learning_rate = 0.001
# Pour le training Adam optimizer Keras
# Fichiers du modèle
model_file = fq_model.h5
# H5 pour les modèles Keras

[strategy_hybrid]
positions_state_file = open_positions_state.json

# Seuils pour la logique hybride de décision (à calibrer via backtesting)
# Les seuils sont testés dans l'ordre pour décider de l'action
# Si aucune condition BUY/SELL n'est remplie -> HOLD

# Seuils pour SIGNAL D'ACHAT
# Condition 1 (XGBoost Prob > seuil)
xgb_buy_prob_threshold = 0.6
# Condition 2 (Pi-Ratings bias) : R_H > R_A + diff_seuil OU R_H / R_A > ratio_seuil
pi_rating_diff_threshold_buy = 0.1
# Exemple de seuil arbitraire
pi_rating_ratio_threshold_buy = 1.2
# Exemple de seuil arbitraire (moins strict que Phi pour permettre des signaux)
# Nouveaux seuils pour score de confiance
pi_confidence_threshold_buy = 0.3
# Score de confiance minimum pour signal d'achat
# Condition 3 (FutureQuant bias) : Q50 > prix_actuel * multi_q50 OU Q10 > prix_actuel * multi_q10
# multi_q50 > 1 pour prédire une hausse > 0%
# multi_q10 > 1 pour que même le pire scénario (quantile 10%) soit haussier
fq_q50_multiplier_buy = 1.005
# Q50 prédit doit être > 0.5% au dessus du prix actuel
fq_q10_multiplier_buy = 1.001
# Q10 prédit doit être > 0.1% au dessus du prix actuel
# Filtre Sentiment : sentiment_score >= seuil
sentiment_min_buy_threshold = 0.1
# Exemple

# Seuils pour SIGNAL DE VENTE (pour CLOTURER une position LONG)
# On peut utiliser des seuils différents ou des conditions différentes pour la sortie.
# Par exemple, sortir si XGBoost prédit SELL ou si FQ prédit une forte baisse ou si R_A >> R_H.
# Condition 1 (XGBoost Prob > seuil)
xgb_sell_prob_threshold = 0.6
# Condition 2 (Pi-Ratings bias) : R_A > R_H + diff_seuil OU R_A / R_H > ratio_seuil
pi_rating_diff_threshold_sell = 0.1
pi_rating_ratio_threshold_sell = 1.2
# Nouveaux seuils pour score de confiance
pi_confidence_threshold_sell = -0.3
# Score de confiance maximum pour signal de vente
# Condition 3 (FutureQuant bias) : Q50 < prix_actuel * multi_q50 OU Q90 < prix_actuel * multi_q90
fq_q50_multiplier_sell = 0.995
# Q50 prédit doit être > 0.5% en dessous du prix actuel
fq_q90_multiplier_sell = 0.999
# Q90 prédit doit être > 0.1% en dessous du prix actuel
# Filtre Sentiment : sentiment_score <= seuil
sentiment_max_sell_threshold = -0.1
# Exemple

# MS Relevance Parameters
ms_relevance_vol_ratio_high = 2.0
# Ratio of current_norm_ATR / formation_norm_ATR above which MS level relevance is penalized due to much higher current volatility
ms_relevance_vol_ratio_low = 0.5
# Ratio below which MS level relevance is penalized due to much lower current volatility
ms_relevance_penalty_high_vol = 0.7
# Penalty factor applied to MS score if current volatility is much higher than at formation
ms_relevance_penalty_low_vol = 0.85
# Penalty factor applied to MS score if current volatility is much lower than at formation

# TP/SL Calculation
# TP/SL Distance comme % du prix d'entrée OU basé sur FQ predicted range
# Option A: Basé sur % fixe + Ratio Fibo (simple)
sl_distance_percent = 0.015
# Stop loss à 1.5% sous le prix d'entrée pour un achat
tp_sl_ratio = 1.618
# Ratio Take Profit / Stop Loss
# Option B: Basé sur FQ Predicted Range (complexe, nécessite implémentation)
# sl_from_fq_quantile = 0.1 # Pour achat, SL = FQ_predicted_Q(0.1)
# tp_from_fq_quantile = 0.9 # Pour achat, TP = FQ_predicted_Q(0.9)
# UTILISER L'OPTION A POUR CETTE ESQUISSE 

# Option C: Dynamique basé sur ATR
use_dynamic_sl_tp = False
dynamic_sl_tp_method = atr
atr_period_sl_tp = 14
atr_sl_multiplier = 1.5
# tp_sl_ratio (défini ci-dessus) sera utilisé pour le TP: TP_ATR_dist = (ATR * atr_sl_multiplier); TP = prix_entree +/- (TP_ATR_dist * tp_sl_ratio)

# Paramètres généraux de stratégie et autres configurations de sortie
enabled = true
use_ml_predictions = true
use_market_structure = true
use_orderflow = true
use_trend_direction = true
use_volatility = true
use_market_regime = true
ml_confidence_threshold = 0.65
max_trade_duration_hours = 48
stop_loss_percent = 0.02 # Note: vérifier si sl_distance_percent est prioritaire lors de l'utilisation de SL/TP fixes
take_profit_percent = 0.04 # Note: vérifier si tp_sl_ratio est prioritaire lors de l'utilisation de SL/TP fixes
# Paramètres de stratégie de sortie (Move to BE, Trailing Stops)
move_to_be_profit_percent = 0.005
# Déplacer SL à Break Even quand prix en profit de 0.5%
trailing_stop_profit_percent_start = 0.01
# Commencer trailing stop quand prix en profit de 1%
trailing_stop_distance_percent = 0.005
# Distance du trailing stop à 0.5% sous le prix le plus haut atteint depuis l'entrée

[order_flow]
# Configuration pour l'analyse Order Flow (nécessite données tick / Niveau 2)
# Note: Les données OF historiques ne sont généralement PAS disponibles via les APIs OHLCV standard (CCXT/Alpaca).
# Cette partie est principalement conceptuelle pour le backtesting sans source de données OF spécifique.
# Pour le trading en direct, il faudrait se connecter à une API de broker compatible ou une source de données OF.
enabled = False
# Activer si une source de données OF est configurée et intégrée
# Paramètres pour l'analyse OF
cvd_lookback_bars = 5
# Calculer CVD sur les N dernières barres
absorption_volume_threshold = 100000
# Volume min à un niveau pour considérer l'absorption (en unités de l'actif de base)
absorption_price_move_threshold_percent = 0.01
# Mouvement de prix max (%) pendant l'accumulation pour l'absorption
trapped_traders_delta_threshold = 50000
# Déviation CVD min au niveau de rejet de prix pour indiquer des traders piégés
# Seuils pour la stratégie
of_cvd_buy_threshold = 10000
# Seuil de CVD positif pour signal d'achat
of_cvd_sell_threshold = -10000
# Seuil de CVD négatif pour signal de vente
of_absorption_buy_threshold = 0.5
# Seuil d'absorption pour signal d'achat
of_absorption_sell_threshold = -0.5
# Seuil d'absorption pour signal de vente
of_buy_bias_threshold = 0.5
# Seuil de bias OF pour signal d'achat
of_sell_bias_threshold = -0.5
# Seuil de bias OF pour signal de vente

[dynamic_risk]
# Paramètres pour Dynamic Risk Management
# Catégories de qualité de setup (A, B, C) mapping vers des multiplicateurs de taille de position
setup_size_multiplier_a = 1.0
# Risquer 100% de la taille de position de base pour les setups A
setup_size_multiplier_b = 0.6
# Risquer 60% pour les setups B
setup_size_multiplier_c = 0.3
# Risquer 30% pour les setups C
min_risk_multiplier = 0.1
# Risque minimum (même si tous les multiplicateurs ensemble donnent moins)
# Ajustement de risque par session (multiplicateur)
session_risk_multiplier_london = 1.0
# Risque normal pendant la session de Londres
session_risk_multiplier_ny = 1.2
# Augmenter le risque pendant la session NY (volatilité plus élevée)
session_risk_multiplier_asia = 0.5
# Réduire le risque pendant la session Asie (volatilité plus faible)
session_risk_multiplier_london_ny_overlap = 1.3

# =====================
# Market Regime Detection Thresholds
# =====================
[regime_thresholds]
adx_trend = 25
adx_range = 20
atr_volatility_high_factor = 1.5
atr_volatility_low_factor = 0.75
atr_smoothing_period = 50
bbw_expansion_percentile = 0.75
bbw_contraction_percentile = 0.25
# To override percentiles with fixed values, uncomment and set:
bbw_expansion_fixed = 0.1
bbw_contraction_fixed = 0.03
volatility_high = 0.02
volatility_low = 0.005
trend_strength_min = 0.3

[trinary_config]
; Parameters for the Trinary System helper functions
trinary_rsi_period = 14
trinary_atr_period_stability = 14
trinary_atr_period_volatility = 14
trinary_atr_sma_period = 50
trinary_bb_period = 20
trinary_bb_stddev = 2.0
trinary_bbw_percentile_lookback = 100
trinary_bbw_percentile_window = 100

# Configuration for sentiment score usage